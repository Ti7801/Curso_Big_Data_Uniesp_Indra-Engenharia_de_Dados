- Comando para entrar no container spark:

	docker.exe exec -it spark bash

- Carregar os packages com as classes de leitura de arquivos CSVs ao abrir o spark-shell.

	spark-shell –packages com.databricks:spark-csv_2.10:1.5.0

	import org.apache.spark.sql.SQLContext

	val sqlC = new SQLContext(sc)


- Comando para ler os arquivos do HDFS e salvar nos dataframes:


 	val dataframe_clientes = spark.read.option("delimiter",";").option("header","true").option("inferSchema","true").csv("/dados_processamento/dados/CLIENTES.csv")
	
 	val dataframe_divisao = spark.read.option("delimiter",";").option("header","true").option("inferSchema","true").csv("/dados_processamento/dados/DIVISAO.csv")

 	val dataframe_endereco = spark.read.option("delimiter",";").option("header","true").option("inferSchema","true").csv("/dados_processamento/dados/ENDERECO.csv")

 	val dataframe_region = spark.read.option("delimiter",";").option("header","true").option("inferSchema","true").csv("/dados_processamento/dados/REGIAO.csv")

 	val dataframe_vendas = spark.read.option("delimiter",";").option("header","true").option("inferSchema","true").csv("/dados_processamento/dados/VENDAS.csv")


mostrar dataframe

	dataframe_clientes.show()


QUESTÃO 4

- CRUZAMENTO DE DADOS PARA SUBSTITUIR 1 POR International E 2 POR Domestic

	dataframe_clientes.withColumn("Division", when(dataframe_clientes("Division") === "1","International").when(dataframe_clientes("Division") === "2","Domestic").otherwise("Não Informado")).show()



- CRUZAMENTO DE DADOS SUBSTITUIR A NÚMERAÇÃO PELO NOME DA REGIÃO:


	0 - Canada
	1 - Western
	2 - Southern
	3 - Northeast
	4 - Central
	5 - International


	dataframe_clientes.withColumn("Region Code", when(dataframe_clientes("Region Code") === "0","Canada")
		.when(dataframe_clientes("Region Code") === "1","Western")
		.when(dataframe_clientes("Region Code") === "2","Southern")
		.when(dataframe_clientes("Region Code") === "3","Northeast")
		.when(dataframe_clientes("Region Code") === "4","Central")
		.when(dataframe_clientes("Region Code") === "5","International")
		.otherwise("Não Informado")).show()



questão 5 

- Quantos pedidos foram realizados:  

	scala> dataframe_VENDAS.count()
	res40: Long = 65535


- Quantos clientes tem em nossa base


	scala> dataframe_clientes.count()
	res42: Long = 684


- Quantos clientes temos por Região


	val clientes = dataframe_clientes.withColumn("Region Code", when(dataframe_clientes("Region Code") === "0","Canada")
      	.when(dataframe_clientes("Region Code") === "1","Western")
      	.when(dataframe_clientes("Region Code") === "2","Southern")
      	.when(dataframe_clientes("Region Code") === "3","Northeast")
      	.when(dataframe_clientes("Region Code") === "4","Central")
      	.when(dataframe_clientes("Region Code") === "5","International")
      	.otherwise("Não Informado"))


Canada:

	clientes.filter(clientes("Region Code") === "Canada").count()
	res54: Long = 37

Western: 

	clientes.filter(clientes("Region Code") === "Western").count()
	res55: Long = 89

Southern:

	clientes.filter(clientes("Region Code") === "Southern").count()
	res56: Long = 100

Northeast:

	clientes.filter(clientes("Region Code") === "Northeast").count()
	res57: Long = 42


Central:

	clientes.filter(clientes("Region Code") === "Central").count()
	res58: Long = 117


International:

	clientes.filter(clientes("Region Code") === "International").count()
	res59: Long = 299


- quantidade de vendas em 2018






